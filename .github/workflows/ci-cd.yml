name: CI/CD Pipeline

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write

jobs:
  build-and-test:
    if: >-
      github.event_name == 'pull_request' ||
      (github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]'))
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm@9

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies with pnpm
        run: pnpm install --frozen-lockfile
        env:
          NEXT_PUBLIC_VERCEL_ENV: development 

      - name: Cache Turborepo build outputs
        uses: actions/cache@v4
        with:
          path: .turbo 
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/turbo.json') }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Build Design System
        run: pnpm turbo run build --filter=@lococo/design-system 

      - name: Type Check (TypeScript)
        run: pnpm turbo run check-types --filter=@lococo/web 

      - name: Lint
        run: pnpm turbo run lint --filter=@lococo/web 

      - name: Test (Jest/React Testing Library)
        run: pnpm turbo run test --filter=@lococo/web 

      - name: Build Next.js Apps & Storybook
        id: build_main 
        run: pnpm turbo run build --filter=@lococo/web 

      - name: Evaluate build status
        id: status
        run: |
          result="failed"
          message="빌드 실패 ❌"

          if [ "${{ steps.build_main.outcome }}" == "success" ]; then
            result="success"
            message="빌드 성공 🎉"
          fi

          echo "result=$result" >> $GITHUB_OUTPUT
          echo "message=$message" >> $GITHUB_OUTPUT

      - name: Add comment to PR with build status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const message = `${{ steps.status.outputs.message }}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `### 🛠️ 빌드 결과\n${message}`
            });

      - name: Fail job if build failed
        if: steps.build_main.outcome == 'failure' 
        run: exit 1